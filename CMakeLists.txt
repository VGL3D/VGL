CMAKE_MINIMUM_REQUIRED(VERSION 3.0.0 FATAL_ERROR)
PROJECT(VGL C CXX)

set(CMAKE_BINARY_DIR ${CMAKE_SOURCE_DIR}/build)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

#IF(WIN32)
#    SET(PC_LIBS_PRIVATE "-lopengl32 -lwinmm -lgdi32")
#ELSEIF(FREEGLUT_GLES)
#    IF(ANDROID)
#        SET(PC_LIBS_PRIVATE "-llog -landroid -lGLESv2 -lGLESv1_CM -lEGL -lm")
#    ELSEIF(BLACKBERRY)
#        IF(PLAYBOOK)
#            SET(PC_LIBS_PRIVATE "-lbps -lscreen -lGLESv2 -lGLESv1_CM -lEGL -lm")
#        ELSE()
#            SET(PC_LIBS_PRIVATE "-lbps -lslog2 -lscreen -lGLESv2 -lGLESv1_CM -lEGL -lm")
#        ENDIF()
#    ELSEIF(FREEGLUT_WAYLAND)
#        SET(PC_LIBS_PRIVATE "-lwayland-client -lwayland-cursor -lwayland-egl -lGLESv2 -lGLESv1_CM -lEGL -lxkbcommon -lm")
#    ELSE()
#        SET(PC_LIBS_PRIVATE "-lglfw3 -lX11 -lXxf86vm -lXrandr -lGLESv2 -lGLESv1_CM -lEGL -lm -lXinerama -lXcursor -pthread")
#    ENDIF()
#ELSE()
#    IF(FREEGLUT_WAYLAND)
#        SET(PC_LIBS_PRIVATE "-lwayland-client -lwayland-cursor -lwayland-egl -lGL -lxkbcommon -lm -lXinerama -lXcursor -pthread")
#    ELSE()
#        SET(PC_LIBS_PRIVATE "-lglfw3 -lX11 -lXxf86vm -lXrandr -lGL -lm -lXinerama -lXcursor -pthread")
#    ENDIF()
#ENDIF()

find_package(PythonLibs REQUIRED)
include_directories(${PROJECT_SOURCE_DIR})
find_package(OpenGL REQUIRED)
include_directories(${OPENGL_INCLUDE_DIRS} ${PYTHON_INCLUDE_DIRS})
add_executable(Random Random/run.cpp VGL/scenes/Scenes.hpp VGL/scenes/Switcher.cpp VGL/scenes/Scene1/scene1.cpp VGL/scenes/Scene1/scene1.cpp)
add_executable(Encodes VGL/Encrypt/Encode.cpp)
target_link_libraries(Random -lglut -lglfw3 -lX11  -lXrandr  -lXxf86vm  -lXi -lGLU  -lGL  -lm -lpython3.10  -lXinerama  -lXcursor  -pthread -lGLEW)
include_directories(Classes/ImageLoader/stb_image.hpp Classes/LoadTexture/LoadTexture.hpp)
